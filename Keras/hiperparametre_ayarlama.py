# -*- coding: utf-8 -*-
"""hiperparametre_ayarlama.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19DpMXqqrvj4LCzxHSoZb4SbJCJSQAj3F
"""

!pip install -q -U keras-tuner

import keras_tuner as kt
import tensorflow as tf
from tensorflow import keras

(img_train,label_train),(img_test,label_test)=keras.datasets.fashion_mnist.load_data()

img_train = img_train.astype("float32") / 255.0
img_test = img_test.astype("float32") / 255.0

def build_model(hp):
  n_hidden=hp.Int("n_hidden",min_value=0,max_value=8,default=2)
  n_neurons=hp.Int("n_neurons",min_value=16,max_value=256,default=64)
  learning_rate=hp.Float("learning_rate",min_value=1e-4,max_value=1e-2,sampling="log",default=1e-3) #eşit aralıkta artan değer olması için log değeri verdik
  optimizer=hp.Choice("optimizer",values=["adam","sgd"])
  if optimizer=="adam":
    optimizer=tf.keras.optimizers.Adam(learning_rate=learning_rate)
  else:
    optimizer=tf.keras.optimizers.SGD(learning_rate=learning_rate)
  model=tf.keras.Sequential()
  model.add(keras.layers.Flatten())
  for layer in range(n_hidden):
    model.add(keras.layers.Dense(n_neurons,activation="relu"))
  model.add(keras.layers.Dense(10,activation="softmax"))
  model.compile(loss="sparse_categorical_crossentropy",optimizer=optimizer,metrics=["accuracy"])
  return model

random_search_tuner=kt.RandomSearch(
    build_model,
    objective="val_accuracy",
    max_trials=5,
    overwrite=True,
    directory="my_dir",
    project_name="my_project",
    seed=42
)

random_search_tuner.search(img_train,label_train,epochs=10,validation_split=0.2)

top3_models=random_search_tuner.get_best_models(num_models=3)
best_model=top3_models[0]

top3_params=random_search_tuner.get_best_hyperparameters(num_trials=3)
best_params=top3_params[0]

top3_params[0].values

best_trial=random_search_tuner.oracle.get_best_trials(num_trials=1)[0]
best_trial.summary()

best_model.fit(img_train,label_train,epochs=5) # modelimiz zaten hazırdı ve epochlarını gemişti biz bu sayede bir 5 epoch daha yaptırmış oluyoruz

test_model_loss,test_model_accuracy=best_model.evaluate(img_test,label_test)
print(f"Test Loss: {test_model_loss}")
print(f"Test Accuracy: {test_model_accuracy}")